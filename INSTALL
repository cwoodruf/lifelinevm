Installing Lifeline Voice Mail
------------------------------

Lifeline Voice Mail is an Asterisk based system that runs on Linux. 
It may work on other operating systems. Both of the provided versions
of Asterisk (1.4 and 1.6 in the telephony directory) are in 
production use. These custom versions are required because the 
telephony interface depends on a custom application RecordKeys that
I believe is not in the main Asterisk tree (certainly the 1.4 
version is not).

These instructions are meant to act as a record of how Lifeline has
been installed on servers in the past so the builds can be replicated
as closely as possible.

Firstly, make an asterisk user. This user should be an ordinary user.

In the /home/asterisk directory make an "svn" directory. Check out
the lifelinevm source code from google code:

cd /home/asterisk/svn
svn co http://lifelinevm.googlecode.com/svn/trunk lifelinevm



To install build one or both versions of Asterisk (see the README in the
telephony directory for details) and install in

/usr/local/asterisk-{version}

You can only have one instance of asterisk running on a given server.
Pick the one you want to run and make a symbolic link to it:

cd /usr/local
ln -s asterisk-1.4 asterisk



In the subversion repository the asterisk-common directory is all the 
common code used by either version of asterisk.

Copy the asterisk-common/sounds directory contents to 

/usr/local/asterisk/var/lib/asterisk/sounds/

Copy the agi-bin, bin and html directories in  asterisk-common/ to 

/usr/local/asterisk

You will need to copy or create a agi-bin/Lifeline/salt file (defines the $salt 
variable used to encode security codes) and an agi-bin/Lifeline/database file
(defines $username and $password for the database). 

You will need to install at least the Asterisk set of perl modules for the agi
scripts to work. Link the Lifeline.pm file and Lifeline directory in agi-bin
to one of the perl @INC directories (or set the PERL5LIB environment variable
to find agi-bin on your system). 


If you build the asterisk samples files make a directory "examples" in the etc/asterisk
directory and copy these files there. Only keep files for modules you intend to use.
You can use the "noload" statement in modules.conf to turn off modules you don't need.

Copy the lifeline.conf and example extensions.conf file to the etc/asterisk directory.
You will need to modify the extensions.conf file to suit your set up. Make the
messages directory as appropriate and fill in database access parameters in your
extensions.conf file. You can have up to 2 sets of parameters for database access.
The *_alt_* parameters are used if the first database access fails.


If you have multiple servers that need to syncronized you can use the bin/sync-msgs.sh
script to update messages on slave / backup servers from the main server. The current
architecture is one active server with a backup. Our telephone service provider allows
multiple sip peers per phone number. Our set up is such that we have all servers 
respond with the back up servers waiting longer to grab the call than the main server.
If the main server fails or is off line the back up servers can take calls.

The bin/cleanup.pl script is useful for marking boxes, messages and greetings for 
deletion after a predetermined amount of time. 


