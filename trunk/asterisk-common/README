This directory contains all the lifeline voicemail specific code shared by both
asterisk 1.6 and 1.4. See the telephony/README for installation instructions for
asterisk. Asterisk should be installed and working before installing the contents 
of this directory. 

For these instructions I am assuming you have set up a sym link to your install of
asterisk: /usr/local/asterisk

ASTERISK SETUP
First clear out the existing programs in agi-bin:

> rm /usr/local/asterisk/var/lib/asterisk/agi-bin/*

Then change to the lifelinevm/asterisk-common directory as the asterisk user:
> cd lifelinevm/asterisk-common

Copy the agi interface to the agi-bin directory:

> cp agi-bin/*.pm agi-bin/*.pl /usr/local/asterisk/var/lib/asterisk/agi-bin
> mkdir /usr/local/asterisk/var/lib/asterisk/agi-bin/Lifeline
> cp agi-bin/Lifeline/* /usr/local/asterisk/var/lib/asterisk/agi-bin/Lifeline
> mkdir /usr/local/asterisk/var/lib/asterisk/agi-bin/Asterisk
> cp agi-bin/Asterisk/* /usr/local/asterisk/var/lib/asterisk/agi-bin/Asterisk

Add the PERL5LIB environment variable to the end of .bashrc for user asterisk:

> nano /home/asterisk/.bashrc
export PERL5LIB=/usr/local/asterisk/var/lib/asterisk/agi-bin
> source /home/asterisk/.bashrc

If your home directory for asterisk is different or you are using a different shell
from bash this may be different.

Copy the lifeline asterisk interface that uses the agi interface to etc/asterisk:

> cp etc/asterisk/lifeline.conf /usr/local/asterisk/etc/asterisk

Copy the sample extensions.conf file:

> cp etc/asterisk/extensions-ll-example.conf /usr/local/asterisk/etc/asterisk

We'll be editing this file later once the database and message directory are set up.

Copy the sound files used by lifeline:

> cp sounds/*.gsm /usr/local/asterisk/var/lib/asterisk/sounds/

DATABASE SETUP
There are two business models used by the voice mail service. In one multiple vendors
buy months of voice mail time. This allows them to create boxes which then expire on 
a specific date. When they run out of time they buy more as they need it. The lifeline
database and web interface use this model. The mediawiki documentation is in lldocs.

An additional model "coolaid" is used for the situation where you have one vendor who
has a set number of boxes they are allowed to use. They can make boxes that exist 
indefinitely. The coolaid database and web interface uses this model. Documentation db
is cooldocs.

Now create a mysql database. Log in to mysql as root:

> mysql -uroot -p

In mysql create databases, a user and use the schemas to build the database:

mysql> create database lifeline;
Query OK, 1 row affected (0.00 sec)

mysql> create database lldocs;
Query OK, 1 row affected (0.00 sec)

mysql> grant all on lifeline.* to 'll'@'localhost' identified by 'somepassword';
Query OK, 0 rows affected (0.00 sec)

mysql> grant all on lldocs.* to 'lldocs'@'localhost' identified by 'somepassword';
Query OK, 0 rows affected (0.00 sec)

mysql> use lifeline;
Database changed

mysql> \. lifeline-schema.mysql

mysql> use lldocs;
Database changed

mysql> \. lldocs-schema.mysql

Similarly you can set up coolaid and cooldocs for the coolaid style website by using
the coolaid-schema.mysql and cooldocs-schema.mysql files to load the databases.

SET UP PASSWORD FILES
Make sure to change 'somepassword' above to an appropriate password.

Next make the salt file for passwords:

> cd /usr/local/asterisk/var/lib/asterisk/agi-bin/Lifeline
> nano salt
$salt = 'some long random string';

Make a database file used by scripts outside of agi for the database 
(example filled in with our data):

> nano database
$ll_database = 'lifeline';
$ll_login = $username = 'll';
$ll_password = $password = 'somepassword';
$ll_port = $port = '3306';
$ll_host = $host = 'localhost';

ASTERISK CONFIGURATION FOR LIFELINE
Make a directory for messages to be stored:

> mkdir /usr/local/asterisk/lifeline-msgs

Now tie all this together in the extensions.conf file (example with our sample settings):

> cd /usr/local/asterisk/etc/asterisk
> nano extensions.conf
[general]
static=yes
writeprotect=no
autofallthrough=no
#include lifeline.conf ; this has to be in the general section

[globals]

[from-pstn]
; used for logging
exten => 6045551212,1,Set(callstart=${EPOCH})
; this Wait is optional but useful if you have redundant servers
exten => 6045551212,n,Wait(1)
exten => 6045551212,n,Set(msgdir=/usr/local/asterisk/lifeline-msgs)
exten => 6045551212,n,Set(db_name=lifeline);
exten => 6045551212,n,Set(db_user=ll);
exten => 6045551212,n,Set(db_host=127.0.0.1)
exten => 6045551212,n,Set(db_port=3306)
exten => 6045551212,n,Set(db_secret=somepassword)
exten => 6045551212,n,Goto(lifeline,s,1)
exten => t,1,Hangup()

[default]
include => from-pstn

;--------------- end extensions.conf

You'll want to change 6045551212 to the phone number people will be using to 
connect to you.  This may vary depending on how you connect to your VoIP ISP. 
The above configuration will work if you use DNIS (ie the ISP sends you the 
phone number called in on). The lifeline.conf should be in the etc/asterisk
directory as well (see instructions above).

To make the changes live restart asterisk:

For 1.6:
> asterisk -rx 'core restart now'

or for 1.4:
> asterisk -rx 'restart now'

You should be able to call in to the system at this point. To make a vm box you'll
need to set up the web interface. I typically copy the contents of the web interface
to /usr/local/asterisk/html and then link to it in the apache configuration:

> cp -r {your svn dir}/lifelinevm/asterisk-common/html /usr/local/asterisk
> nano /usr/local/asterisk/html/tools/php/.mysql.php
<?php
$ll_login = 'll';
$ll_password = 'somepassword';

As root on ubuntu add an alias to the web configuration:

root> nano /etc/apache2/sites-enabled/000-default
Alias /lifeline /usr/local/asterisk/html/lifeline
<Directory "/usr/local/asterisk/html/lifeline">
    Options +FollowSymLinks
    # you may want other options here
</Directory>

Restart the apache server:
root>service apache2 restart

If you go to the /lifeline page on your server now you should see an instruction page
for the vm system.

Going to /lifeline/admin.php will bring up a login page. To set up the database copy
over the utility scripts to /usr/local/asterisk:

> cp -r {svn directory}/lifelinevm/asterisk-common/bin /usr/local/asterisk

Run the lifelinesetup.pl script from this directory:

> cd /usr/local/asterisk/bin
> ./dbsetup.pl

Follow the prompts to create an initial super user for the web interface.
You can create new vendor accounts from /lifeline/admin.php and you can invite new
users to make logins for themselves from /lifeline/emailsignup.php. (To do the same 
for the coolaid style interface replace "lifeline" with "coolaid".)

Note the web tools should be modified to work with the specifics of your installation.
Also note that you may have to fiddle with web server user or permissions to get asterisk
to report uptime correctly. A work around would be to run a regular cron with the uptime.

DOCUMENTATION WEBSITES

Both the coolaid and lifeline versions of the websites have documentation links. Copy
the mediawiki directories from html/lifeline and html/coolaid over and make sure the
docs links in these directories work. You will have to change the database credentials
for these installations to work. Look for the LocalSettings.php files in the mediawiki
directories and change the database password, user and emails to suitable values.
